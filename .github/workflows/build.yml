name: Build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller opencv-python pillow
        pip install --upgrade pyinstaller
    
    - name: List files
      run: |
        echo "Current directory contents:"
        ls -la
        echo "Python version:"
        python --version
        echo "PyInstaller version:"
        pyinstaller --version
    
    - name: Build Windows
      if: matrix.os == 'windows-latest'
      run: |
        echo "Starting Windows build..."
        echo "Current directory:"
        dir
        echo "Building with PyInstaller..."
        python -m PyInstaller watermark_selector.spec --clean --log-level DEBUG
        echo "Dist directory contents:"
        dir dist
        cd dist
        7z a watermark-selector-windows.zip "视频水印区域选择工具.exe"
      
    - name: Build macOS
      if: matrix.os == 'macos-latest'
      run: |
        echo "Starting macOS build..."
        echo "Current directory:"
        ls -la
        echo "Building with PyInstaller..."
        python -m PyInstaller watermark_selector.spec --clean --log-level DEBUG
        echo "Dist directory contents:"
        ls -la dist
        cd dist
        zip -r watermark-selector-mac.zip "视频水印区域选择工具.app"
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-build
        path: dist/*.zip
        if-no-files-found: error
    
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/*.zip
        fail_on_unmatched_files: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 